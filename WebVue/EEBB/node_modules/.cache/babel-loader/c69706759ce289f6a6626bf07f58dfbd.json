{"remainingRequest":"D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\node_modules\\babel-loader\\lib\\index.js!D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\src\\components\\Inicio.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\src\\components\\Inicio.vue","mtime":1587303263900},{"path":"D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Programacion\\AppNecomplus\\WebVue\\necomplus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfQp9Ow=="},{"version":3,"sources":["Inicio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA,EAAA;AAAA;AADA,CAAA","sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col class=\"mb-4\">\n        <h1 class=\"display-2 font-weight-bold mb-3\">\n          GESTIÓN DE ENTIDADES BANCARIAS\n        </h1>\n        <p class=\"subheading font-weight-regular\">\n          Tenemos que realizar una aplicación web basada en un backend como servicio REST en\n          ASP.NET Core y un frontend en vuejs en javascript (valorable usando vue cli).\n        </p>\n        <p class=\"subheading font-weight-regular\">\n          Una entidad bancaria es un tipo datos que tiene las siguientes propiedades básicas:\n        </p>\n        <p class=\"subheading font-weight-regular\">  \n          ID, Nombre, Dirección, Población, Provincia, Cod. Postal, Teléfono, Mail, Logo, Grupo\n          Entidad, Pais, Estado_Activo.\n        </p>\n        <p class=\"subheading font-weight-regular\">  \n          Un grupo entidad tiene las siguientes columnas:\n        </p>\n        <p class=\"subheading font-weight-regular\">  \n          Id, Nombre, Color\n        </p>\n        <p class=\"subheading font-weight-regular\">  \n          Donde un “grupo de entidad” engloba muchas entidades. La columna estado_activo es un\n          filtro global booleano que indica si debe mostrar ese registro o no y afecta a todas las\n          consultas.\n        </p>\n      </v-col>\n\n      <v-col class=\"mb-5\" cols=\"12\">\n        <h2 class=\"headline font-weight-bold mb-3\">\n         La aplicación consistirá en la gestión de entidades bancarias. Las opciones que se deben implementar son:\n        </h2>\n\n        <ul>\n          <li>\n            Crear la base de datos relacional de las entidades descritas.\n          </li>\n          <li>\n            Modelar el contexto de datos de estas tablas en Entity Framework Core 2.2.\n          </li>\n          <li>\n            Crear una API básica que tenga las siguientes operaciones:\n            <ul>\n              <li>\n                Listado de entidades, con al menos dos filtros opcionales y ordenación por Id\n              </li>\n              <li>\n                Inserción de nueva entidad \n              </li>              \n            </ul>  \n          </li>\n          <li>\n            Crear un frontend en Vue (preferentemente, u otro front javascript) que muestre\n            el listado de entidades como una tabla donde se muestre las entidades junto con\n            el nombre de su grupo y un modal para insertar una nueva entidad.\n          </li>\n        </ul>\n      </v-col>\n\n      <v-col class=\"mb-5\" cols=\"12\">\n        <h2 class=\"headline font-weight-bold mb-3\">\n          Notas:\n        </h2>\n        <ul>\n          <li>\n            Todas las consultas a la base de datos se realizarán en LINQ evitando escribir consultas RAW SQL.\n          </li>\n          <li>\n            Se valorará muy positivamente tests unitarios como mínimo en backend pero también en frontend.\n          </li>\n          <li>\n            Valorable Implementar seguridad JWT mediante un token estático sin fecha de caducidad.\n          </li>\n          <li>\n            No es tan importante la maquetación de la prueba pero sí valorable.\n          </li>\n        </ul>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n  })\n};\n</script>\n"],"sourceRoot":"src/components"}]}